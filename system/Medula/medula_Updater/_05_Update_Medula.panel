
import urllib2

medula_last_url = 'https://github.com/javi2d/medula/zipball/master'

in_backup = ['...'] + [ d for d in medula( 'versions' )['$FOLDER_NAMES'] if not d == 'Downloads' ] 


class User:
	
	update = bttnKnob( 'update to last version' )
	
	sep = sepKnob()
	
	restore = bttnKnob( 'restore backup'  )
	
	in_backup_versions = enumKnob( '' , in_backup , clearflags = 'STARTLINE' )
	


def restore( this ):
	
	value = this.VALUES.in_backup_versions
	
	if value == '...':
		
		nuke.message( 'Please select a backup to restore, if any' )
		
		return
	
	
	if nuke.ask( 'Are you sure to restore %s backup?' % value  ):
		
		_move( medula.versions( value ) , do_backup = True )

	

def update( this ):
	
	version_folder = _download_and_unzip( )
	
	if version_folder:
		
		_backup_and_move(  version_folder )
		
	else:
		
		nuke.message( 'medula Update Cancelled' )


def _move( src_shell , do_backup = True ):
	
	import shutil
	
	for relpath in src_shell['$FOLDER_NAMES']:
		
		src_path = src_shell( relpath )['$PATH']
		
		trg_path = medula( relpath )['$PATH']
		
		if do_backup:
		
			backup = medula.versions( 'Medula_Update_Backup_at_' + time.asctime().replace( ':' , '_' ).replace( ' ' , '_' ) )
			
			shutil.move( trg_path , backup['$PATH'] )
		
		shutil.move( src_path , medula['$PATH'] )
	
	
	nuke.message( 'Restart nuke to complete update process' )
	
	



def _backup_and_move( version_folder ):
	
	import shutil
		
	new_medula_shell = medula.versions.Downloads( version_folder )
	
	_move( new_medula_shell , do_backup = True )


	
	
def _download_and_unzip( ):
	
	
	versions = medula( 'versions' )
	
	downloads = versions( 'Downloads' )
	
	medula_zip = urllib2.urlopen( medula_last_url )
	
	last_version = downloads( 'last_version.zip' )['rewrite']( medula_zip.read() )
	
	import zipfile
	
	medula_zip = zipfile.ZipFile( last_version['file'] )
	
	version_folder = Normalize.path( medula_zip.namelist()[0] ).split('/')[0]
	
	if version_folder in downloads['$FOLDER_NAMES']:
		
		if not nuke.ask( 'Seems that you have already installed this version, update again?' ):

			return 
	
	medula_zip.extractall( downloads['$PATH'] )
	
	return version_folder
	

	