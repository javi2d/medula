
	
		

	





def make_green_thread():

	
	taskbar = nuke.ProgressTask( 'Making Green :)' )
	
	import shutil
	
	
	def compare_files( a , b ):

		#import filecmp

		#return filecmp.cmp( a , b  ) #, shallow = True 

		sta = os.stat( a )
		stb = os.stat( b )

		return sta[6] == stb[6]
	

	
	for node , auto_folder_name , file_value , proxy_value , firstFrame , lastFrame in brain.Lib.selection.Reads():
		
		
		this = space.this( node )

		# 1 Averiguar si la secuencia esta en la unidad

		src_folder = os.path.dirname( this.VALUES.file )

		compatibles , match = brain.Lib.sources.compatible_match( src_folder )
		
		isgreen = False
		
		for compatible in compatibles:
			
			tmp_src_folder = src_folder.replace( match , compatible )
			
			if tmp_src_folder.startswith( this.UNIT_PATH ):
				
				isgreen = True
				
				print '>> Node already green'
				
		# 2.1 Si esta, no es necesario procesar el nodo
				
		if isgreen:
			
			continue
				
		# 2.1 Si no esta, se resuelve el directorio de destino
		
		host = brain.Lib.sources.host( src_folder )
		
		if host:
		
			trg_folder = Normalize.join( this.UNIT_PATH , 'Input' , host )
		
		else:
			
			trg_folder = Normalize.join( this.UNIT_PATH , 'Input' , 'other_sources' )
		
		
		file_name = os.path.basename( file_value )
		
		trg_folder = Normalize.join( trg_folder , auto_folder_name )
		
		sh( trg_folder )

		node['source_reference'].fromUserText( Normalize.join( trg_folder , file_name ) )
		
		

		for frame in range( firstFrame , lastFrame + 1 ):

			t = time.time()

			if taskbar.isCancelled():	
				return

			for path in [ file_value , proxy_value ]:
				
				file_name = os.path.basename( path )

				trg_path = Normalize.join( trg_folder , file_name )
				
				trg_file = brain.Lib.path.frame_path( trg_path , frame )
				src_file = brain.Lib.path.frame_path( path , frame )
				

				if os.path.isfile( src_file ):
						
					if os.path.isfile( trg_file ) and compare_files( src_file , trg_file ): #, 

						msg = '== %s' % os.path.basename( src_file )
						print  msg
						taskbar.setMessage( msg )


					elif os.path.isfile( trg_file ) and  not compare_files( src_file , trg_file ):
						
						msg = 'WARNING!! <> %s' % os.path.basename( src_file )
						print  msg
						taskbar.setMessage( msg )


					else:

						msg = '>> %s' % os.path.basename( src_file )

						print  msg
						taskbar.setMessage( msg )

						shutil.copy( src_file , trg_file )

				current_frame = frame-firstFrame + 1
				total_frames  = lastFrame-firstFrame + 1

				taskbar.setProgress( current_frame*100/total_frames )
			
		


def start():

	print '>> Make Green LOG'	

	import threading

	threading.Thread( None , make_green_thread  ).start()		

start()
		
		
