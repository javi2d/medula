


class Utils:
	
	link = bttnKnob( 'Link to selected Card ( 3D ) node' )
	
	unlink = bttnKnob( 'Unlink' )
	

def unlink( this ):
	
	for knob in this.SORTED_KNOBS:
		
		if knob.hasExpression():
			
			knob.clearAnimated()
	


def link( this ):
	
	try:
		
		card_node = nuke.selectedNode()
		
		if card_node.Class().startswith( 'Card' ) and not card_node.Class().startswith( 'Card3D' ):

			for trg_knob in this.SORTED_KNOBS:
				
				NAME = trg_knob.name()
				
				if NAME == 'name':
					
					break
	
				if NAME in this( card_node ).SORTED_NAMES:

					trg_knob.setExpression( '%s.%s' % ( card_node.name() , trg_knob.name() ) )
		
		else:
			
			nuke.message( 'Node selection not valid.\nSelect a Card ( 3D object )' )
		
		
	except:
		
		nuke.message( 'Select a Card ( 3D object ) node to link values into this Card3D' )
		